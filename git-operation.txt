克隆代码仓库: git clone 仓库地址
查看当前代码的状态: git status 
查看所有分支: git branch -a

仓库创建
1、在github个人中心里面点加号选择New repository，然后得到一个仓库地址
2、git remote add origin 仓库地址
3、git push -u origin master

避免每次提交都要输入git账号和密码
git地址修改为ssh的地址
1、移除https的方式
git remote rm origin
2、修改新地址
git remote add origin ssh地址

代码提交
1、git add . （提交全部修改或新增文件）或者git add 文件名（提交单个文件）
2、git commit -m '当前提交说明'
提交远程仓库 
git remote -v（查看远程分支）
3、git push 或者 git push origin 分支名

创建并切换到新分支
git checkout -b 分支名
推送本地分支到远程仓库
git push --set-upstream origin 分支名
-u=--set-upstream
合并分支
1、切换到主分支上
git checkout master
2、把要合并的分支合并到master上
git merge dev
3、提交到远程
git push 或者 git push origin master

删除分支
git branch -D 分支名（仅删除对应的本地分支）
git push origin :分支名 （仅删除对应的远程分支）

版本回退
git reset --hard head^ (回退上一个版本)

查看git提交日志
git log 或者 git reflog

git reset -- hard HEAD@{1}

拉取远程仓库代码
git pull


git 标签
列出标签 git tag (可带上可选的 -l 选项 --list) eg: git tag  /  git tag -l "v1.8.5*"	

创建标签 
Git 支持两种标签：轻量标签（lightweight）与附注标签（annotated）
轻量标签很像一个不会改变的分支——它只是某个特定提交的引用。
而附注标签是存储在 Git 数据库中的一个完整对象， 它们是可以被校验的.

附注标签:
 git tag -a 标签名 -m "标签名的提交信息"
 使用 git show 标签名 命令可以看到标签信息和与之对应的提交信息  

轻量标签:
git tag 标签名

后期打标签: 
git log --pretty=oneline
git tag -a v1.2  9fceb02

共享标签:	git push origin <tagname>
默认情况下，git push 命令并不会传送标签到远程仓库服务器上

如果想要一次性推送很多标签: git push origin --tags

删除标签: 
1: 要删除掉你本地仓库上的标签
  1, git tag -d <tagname>
  2, git push origin :refs/tags/<tagname>
2: 直观的删除远程标签的
git push origin --delete <tagname>

分支重命名
1: 本地分支重命名: git branch -m oldName newName
2: 将重命名后的分支推送到远程: git push origin newName
3: 删除远程的旧分支: git push --delete origin oldName (注: 如果删除失败的话,检查是不是该分支是不是默认分支)
    

